{"mappings":"AACmC,MAA7BA,EAAQ,CACZ,CACEC,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEf,CACEF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEd,CACCF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEb,CACAF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEZ,CACDF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEX,CACFF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEV,CACHF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAET,CACJF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAEX,CACFF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAET,CACJF,MAAO,SACPC,OAAQ,WACRC,YAAa,yBAET,CACJF,MAAO,SACPC,OAAQ,WACRC,YAAa,0BAS8B,SAAtCC,EAAaC,GACpB,MAAMC,EAJa,GAICD,EAAa,GAC3BE,EAAWD,EALE,EAMbE,EAAiBR,EAAMS,MAAMH,EAAYC,GAEzCG,EAAkBC,SAASC,eAAe,YAChDF,EAAgBG,UAAY,GAGPL,EAANM,SAAQC,IACrB,MAAMC,EAAWL,SAASM,cAAc,OACxCD,EAASE,UAAUC,IAAI,aACvBH,EAASH,UAAY,eACbE,EAAKd,iDACmBc,EAAKb,sDACAa,EAAKZ,wBAE1CO,EAAgBU,YAAYJ,EAAS,G,CA8BP,MAA5BK,EAAaC,KAAKC,KAAKvB,EAAMwB,OAlDd,GAqDiBpB,EAAzB,GA5BiB,SAAHqB,GACzB,MAAMC,EAAqBf,SAASC,eAAe,eACnDc,EAAmBb,UAAY,GAEE,IAA5B,IAAIc,EAAI,EAAGA,GAAKF,EAAYE,IAAK,CACpC,MAAMC,EAAajB,SAASM,cAAc,UAC1CW,EAAWC,UAAYF,EACvBC,EAAWE,iBAAiB,SAAS,KACnC1B,EAAauB,EAAE,IAEjBD,EAAmBN,YAAYQ,E,EAmBnCG,CAAkBV,GAGlB,MAAMW,EAAkBrB,SAASC,eAAe,aAC1CqB,EAAiBtB,SAASC,eAAe,YACzCsB,EAAiBvB,SAASC,eAAe,YACzCuB,EAAiBxB,SAASC,eAAe,YAE/CoB,EAAgBF,iBAAiB,SAtBA,WAC/B1B,EAAa,E,IAsBf6B,EAAeH,iBAAiB,SAAS,KACvC,MAAMM,EAAcC,iBAChBD,EAAc,GAChBhC,EAAagC,EAAc,EAAE,IAGjCF,EAAeJ,iBAAiB,SAAS,KACvC,MAAMM,EAAcC,iBAChBD,EAAcf,GAChBjB,EAAagC,EAAc,EAAE,IAGjCD,EAAeL,iBAAiB,SA9BI,WAClC1B,EAAaiB,E","sources":["src/pagination.js"],"sourcesContent":["// Создаем массив книг с фиктивными данными\nconst books = [\n  {\n    title: 'Book 1',\n    author: 'Author 1',\n    description: 'Description of Book 1',\n  },\n  {\n    title: 'Book 2',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n   {\n    title: 'Book 3',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n    {\n    title: 'Book 4',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n     {\n    title: 'Book 5',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n      {\n    title: 'Book 2',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n       {\n    title: 'Book 6',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n        {\n    title: 'Book 7',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n      {\n    title: 'Book 8',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n        {\n    title: 'Book 9',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n        {\n    title: 'Book 9',\n    author: 'Author 2',\n    description: 'Description of Book 2',\n    },\n  \n  // Добавьте данные о других книгах по аналогии\n];\n\nconst booksPerPage = 2;\n\n// Функция для отображения книг на определенной странице\nfunction displayBooks(pageNumber) {\n  const startIndex = (pageNumber - 1) * booksPerPage;\n  const endIndex = startIndex + booksPerPage;\n  const booksToDisplay = books.slice(startIndex, endIndex);\n\n  const bookListElement = document.getElementById('bookList');\n  bookListElement.innerHTML = '';  // Очищаем содержимое блока с книгами\n\n  // Отображаем каждую книгу\n  booksToDisplay.forEach(book => {\n    const bookCard = document.createElement('div');\n    bookCard.classList.add('book-card');\n    bookCard.innerHTML = `\n      <h3>${book.title}</h3>\n      <p><strong>Author:</strong> ${book.author}</p>\n      <p><strong>Description:</strong> ${book.description}</p>\n    `;\n    bookListElement.appendChild(bookCard);\n  });\n}\n\n// Функция для отображения пагинации\nfunction displayPagination(totalPages) {\n  const pageNumbersElement = document.getElementById('pageNumbers');\n  pageNumbersElement.innerHTML = ''; // Очищаем содержимое блока с пагинацией\n\n  for (let i = 1; i <= totalPages; i++) {\n    const pageButton = document.createElement('button');\n    pageButton.innerText = i;\n    pageButton.addEventListener('click', () => {\n      displayBooks(i);\n    });\n    pageNumbersElement.appendChild(pageButton);\n  }\n}\n\n// Функция для перехода к первой странице\nfunction goToFirstPage() {\n  displayBooks(1);\n}\n\n// Функция для перехода к последней странице\nfunction goToLastPage() {\n  displayBooks(totalPages);\n}\n\n// Рассчитываем общее количество страниц\nconst totalPages = Math.ceil(books.length / booksPerPage);\n\n// Отображаем первую страницу книг и пагинацию\ndisplayBooks(1);\ndisplayPagination(totalPages);\n\n// Обработчики событий для кнопок \"<<\" (первая страница) и \">>\" (последняя страница)\nconst firstPageButton = document.getElementById('firstPage');\nconst prevPageButton = document.getElementById('prevPage');\nconst nextPageButton = document.getElementById('nextPage');\nconst lastPageButton = document.getElementById('lastPage');\n\nfirstPageButton.addEventListener('click', goToFirstPage);\nprevPageButton.addEventListener('click', () => {\n  const currentPage = getCurrentPage();\n  if (currentPage > 1) {\n    displayBooks(currentPage - 1);\n  }\n});\nnextPageButton.addEventListener('click', () => {\n  const currentPage = getCurrentPage();\n  if (currentPage < totalPages) {\n    displayBooks(currentPage + 1);\n  }\n});\nlastPageButton.addEventListener('click', goToLastPage);\n"],"names":["$a593388852b485da$var$books","title","author","description","$a593388852b485da$var$displayBooks","pageNumber","startIndex","endIndex","booksToDisplay","slice","bookListElement","document","getElementById","innerHTML","forEach","book","bookCard","createElement","classList","add","appendChild","$a593388852b485da$var$totalPages","Math","ceil","length","totalPages1","pageNumbersElement","i","pageButton","innerText","addEventListener","$a593388852b485da$var$displayPagination","$a593388852b485da$var$firstPageButton","$a593388852b485da$var$prevPageButton","$a593388852b485da$var$nextPageButton","$a593388852b485da$var$lastPageButton","currentPage","getCurrentPage"],"version":3,"file":"index.01df4cc6.js.map"}